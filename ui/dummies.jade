script#light-rgbct-template(type='text/template')
  li.sortable.no-header.light-rgbct-device
    div.item-inner
      label.device-label(data-bind="text: name, tooltip: $data.labelTooltipHtml")
      div.ui-dimlevel
        select.switch(data-bind="attr: { id: switchId }, value: switchState")
          option(value="off")=__('Off')
          option(value="on")=__('On')
        div.ui-smallspacer
        input.ddimmer(min="0", max="100", step="1", data-highlight="true",
          data-bind="attr: { id: dsliderId }, value: dsliderValue")
      div.ui-color
        div.ui-colorpicker(class="ui-flipswitch ui-corner-all")
          input.light-color(data-bind="attr: { id: pickId }")
        div.ui-smallspacer
        input.cdimmer(min="0", max="100", step="1", data-highlight="true",
          data-bind="attr: { id: csliderId }, value: csliderValue")

script#led-light-template(type='text/template').
  <li data-bind="attr: { id: id }" class="sortable no-header">
    <div class="light-container">
      <div class="light-label-container">
        <label data-bind="text: name, tooltip: $data.labelTooltipHtml" class="device-label"></label>
      </div>
      <div class="light-brightness-container">
        <input min="0" max="100" step="1" class="light-brightness">
      </div>
      <div class="light-color-container">
        <input class="light-color">
      </div>
      <div class="light-power-container">
        <select data-bind="attr: { value: power }" class="light-power">
        <option value="off">Off</option>
        <option value="on">On</option>
        </select>
      </div>
    </div>
    <span data-bind="text: ($data.error() ? $data.error() : '') " class="error"></span>
  </li>

script#dummythermostat-template(type='text/template')
  li.sortable.device.no-header.thermostat(data-bind='css: {unsynced: !$data.synced(), attr: { id: device.id }}')
    label.device-label(data-bind="text: name, tooltip: $data.labelTooltipHtml")
    .controls.no-carousel-slide
      .button-control.ui-controlgroup.ui-controlgroup-horizontal.ui-corner-all.ui-mini.no-carousel-slide(data-role='controlgroup', data-type='horizontal', data-mini='true', data-enhanced='true')
        .ui-controlgroup-controls
          a.ui-first-child.ui-btn.ui-corner-all(name='offButton', data-bind='click: modeOff') off
          a.ui-last-child.ui-btn.ui-corner-all(name='onButton', data-bind='click: modeOn') on
      .button-control.ui-controlgroup.ui-controlgroup-horizontal.ui-corner-all.ui-mini.no-carousel-slide(data-role='controlgroup', data-type='horizontal', data-mini='true', data-enhanced='true')
        .ui-controlgroup-controls
          a.ui-first-child.a.ui-btn.ui-corner-all.ui-last-child(name='ecoButton', data-bind='click: modeEcoToggle') eco
      .button-control.ui-controlgroup.ui-controlgroup-horizontal.ui-corner-all.ui-mini.no-carousel-slide(data-role='controlgroup', data-type='horizontal', data-mini='true', data-enhanced='true')
        .ui-controlgroup-controls
          a.ui-first-child.ui-btn.ui-corner-all(name='heatButton', data-bind='click: modeHeat') heat
          a.ui-btn.ui-corner-all(name='heatcoolButton', data-bind='click: modeHeatCool') heatcool    
          a.ui-last-child.ui-btn.ui-corner-all(name='coolButton', data-bind='click: modeCool') cool
      .button-control.ui-controlgroup.ui-controlgroup-horizontal.ui-corner-all.ui-mini.no-carousel-slide(data-role='controlgroup', data-type='horizontal', data-mini='true', data-enhanced='true')
        .ui-controlgroup-controls
          a.ui-first-child.ui-btn.ui-corner-all(name='manualButton', data-bind='click: modeManual') manual
          a.ui-last-child.ui-btn.ui-corner-all(name='autoButton', data-bind='click: modeAuto') auto
      .button-box
        .spinbox.no-carousel-slide
          input(type='text', data-role='spinbox', name='spin', value='0', min='0', max='100', data-mini='true', step='0.5', data-bind='textInput: inputValue')
        .spinbox.no-carousel-slide
          input(type='text', data-role='spinbox', name='spin2', value='0', min='0', max='100', data-mini='true', step='0.5', data-bind='textInput: inputValue2')
        .spinbox.no-carousel-slide
          input(type='text', data-role='spinbox', name='spin3', value='0', min='0', max='100', data-mini='true', step='0.5', data-bind='textInput: inputValue3')
      span.attributes(data-bind="template: { name: 'attribute-template', foreach: $data.device.attributes, afterRender: $data.afterAttributeRender }")

script#alarmpanel-template(type='text/template')
  li.sortable.device.no-header.thermostat(data-bind='css: {unsynced: !$data.synced(), attr: { id: device.id }}')
    label.device-label(data-bind="text: name, tooltip: $data.labelTooltipHtml")
    .controls.no-carousel-slide
      .button-control.ui-controlgroup.ui-controlgroup-horizontal.ui-corner-all.ui-mini.no-carousel-slide(data-role='controlgroup', data-type='horizontal', data-mini='true', data-enhanced='true')
        .ui-controlgroup-controls
          a.ui-first-child.a.ui-btn.ui-corner-all.ui-last-child(name='disarmedButton', data-bind='click: modeDisarmed') Disarmed
      .button-control.ui-controlgroup.ui-controlgroup-horizontal.ui-corner-all.ui-mini.no-carousel-slide(data-role='controlgroup', data-type='horizontal', data-mini='true', data-enhanced='true')
        .ui-controlgroup-controls
          a.ui-first-child.ui-btn.ui-corner-all(name='armedHomeButton', data-bind='click: modeArmedHome') armed home
          a.ui-btn.ui-corner-all(name='armedAwayButton', data-bind='click: modeArmedAway') armed away    
          a.ui-last-child.ui-btn.ui-corner-all(name='armedNightButton', data-bind='click: modeArmedNight') armed night
      .button-control.ui-controlgroup.ui-controlgroup-horizontal.ui-corner-all.ui-mini.no-carousel-slide(data-role='controlgroup',       data-type='horizontal', data-mini='true', data-enhanced='true')
        .ui-controlgroup-controls
          a.ui-first-child.ui-btn.ui-corner-all(name='armingButton') arming
          a.ui-btn.ui-corner-all(name='disarmingButton') disarming    
          a.ui-btn.ui-corner-all(name='pendingButton') pending    
          a.ui-last-child.ui-btn.ui-corner-all(name='triggeredButton') triggered
      span.attributes(data-bind="template: { name: 'attribute-template', foreach: $data.device.attributes, afterRender: $data.afterAttributeRender }")

